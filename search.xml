<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在 HexoMatery 主题下配置 utteranc 评论插件</title>
      <link href="/2022/10/20/blog/hexo-matery-setup-utteranc/"/>
      <url>/2022/10/20/blog/hexo-matery-setup-utteranc/</url>
      
        <content type="html"><![CDATA[<h1 id="在-HexoMatery-主题下配置-utteranc-评论插件"><a href="#在-HexoMatery-主题下配置-utteranc-评论插件" class="headerlink" title="在 HexoMatery 主题下配置 utteranc 评论插件"></a>在 HexoMatery 主题下配置 utteranc 评论插件</h1><blockquote><p>HexoMatery 主题没有自带 utteranc 评论插件，当然我们也可以依葫芦画瓢地搞一个上去</p></blockquote><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><ul><li>可以保存 utteranc 评论的公共库</li><li>可以提交修改的主题仓库</li></ul><h2 id="配置-utteranc-评论库"><a href="#配置-utteranc-评论库" class="headerlink" title="配置 utteranc 评论库"></a>配置 utteranc 评论库</h2><ol><li>先跟以往创建 github 仓库的方式一样创建一个公共代码库</li><li>安装 <a href="https://github.com/apps/utterances">utteranc app</a></li></ol><h2 id="将-utteranc-插件添加到主题仓库"><a href="#将-utteranc-插件添加到主题仓库" class="headerlink" title="将 utteranc 插件添加到主题仓库"></a>将 utteranc 插件添加到主题仓库</h2><ol><li><p>创建评论模版<br> 在主题 <code>layout\_partial\</code> 目录下创建 <code>utterances.ejs</code><br> <code>请修改文件中有注释说明的部分为你自己的配置信息</code></p> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"fade-up"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"comment_head"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"comment_headling"</span> style<span class="token operator">=</span><span class="token string">"font-size: 20px; font-weight: 700; position: relative; padding-left: 20px; top: 15px; padding-bottom: 5px;"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fas fa-comments fa-fw"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>评论<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'contact_plan'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'comment_head'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"utterances-container"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-content center-align"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"utterances_loading"</span> style<span class="token operator">=</span><span class="token string">"align-content: center;"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fas fa-spinner fa-spin"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>        <span class="token keyword">function</span> <span class="token function">_checkUtteranc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'utterances'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span>            <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.utterances_loading'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token number">1e3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">:</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>_checkUtteranc<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> utterances <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            utterances<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text/javascript'</span><span class="token punctuation">;</span>            utterances<span class="token punctuation">.</span>async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            utterances<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'issue-term'</span><span class="token punctuation">,</span><span class="token string">'title'</span><span class="token punctuation">)</span> <span class="token comment">// 这里我们设置为使用页面标题作为 issue titile，更多的请参阅 utterances 官网</span>            utterances<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'repo'</span><span class="token punctuation">,</span><span class="token string">'CListery/hexo-utterances'</span><span class="token punctuation">)</span> <span class="token comment">// 这里设置你自己的 utteranc 评论仓库</span>            utterances<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'label'</span><span class="token punctuation">,</span><span class="token string">'comment'</span><span class="token punctuation">)</span> <span class="token comment">// 设置 issue 的标签</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span>            <span class="token operator">?</span> <span class="token punctuation">(</span>utterances<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'theme'</span><span class="token punctuation">,</span><span class="token string">'github-dark'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">:</span> <span class="token punctuation">(</span>utterances<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'theme'</span><span class="token punctuation">,</span><span class="token string">'github-light'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            utterances<span class="token punctuation">.</span>crossorigin <span class="token operator">=</span> <span class="token string">'anonymous'</span><span class="token punctuation">;</span>            utterances<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'https://utteranc.es/client.js'</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'utterances-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>utterances<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">_checkUtteranc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改主题模版文件</p><ul><li><p>修改 <code>layout\_partial\post-detail.ejs</code><br>  在 <code>&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) { %&gt;</code> 上一行添加</p>  <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>utterances <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>utterances<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/utterances'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>修改 <code>layout\contact.ejs</code><br>  在 <code>&lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) { %&gt;</code> 上一行添加</p>  <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>utterances <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>utterances<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/utterances'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>修改主题中的 <code>_config.yml</code><br>  添加以下内容</p>  <pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">utterances</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ol><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上就完成了 utteranc 评论插件的配置，重启 hexo 服务，不出意外就可以看到了</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Github Pages </tag>
            
            <tag> utteranc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 Github Pages 的 hexo 博客搭建</title>
      <link href="/2022/10/19/blog/hexo-setup/"/>
      <url>/2022/10/19/blog/hexo-setup/</url>
      
        <content type="html"><![CDATA[<h1 id="基于-Github-Pages-的-hexo-博客搭建"><a href="#基于-Github-Pages-的-hexo-博客搭建" class="headerlink" title="基于 Github Pages 的 hexo 博客搭建"></a>基于 Github Pages 的 hexo 博客搭建</h1><hr><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><h3 id="网站源码库"><a href="#网站源码库" class="headerlink" title="网站源码库"></a>网站源码库</h3><ul><li>私有仓库，存放你手写的博客源代码，简称 <code>库1</code></li></ul><h3 id="主题库"><a href="#主题库" class="headerlink" title="主题库"></a>主题库</h3><ul><li>私有仓库，存放你自定义的主题代码，将其作为 git submodule 添加到 <code>库1</code>，简称 <code>库2</code></li></ul><h3 id="Github-Pages-库-xxx-github-io"><a href="#Github-Pages-库-xxx-github-io" class="headerlink" title="Github Pages 库(xxx.github.io)"></a>Github Pages 库(xxx.github.io)</h3><ul><li>公共库，存放通过前两个仓库生成的网站页面，简称 <code>库3</code></li></ul><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="给公共库配置部署密钥"><a href="#给公共库配置部署密钥" class="headerlink" title="给公共库配置部署密钥"></a>给公共库配置部署密钥</h3><blockquote><p>用于 <code>库1</code> 和 <code>库2</code> 的代码编译后自动部署到 <code>库3</code></p></blockquote><h4 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> ed25519 <span class="token parameter variable">-C</span> <span class="token string">"clistery.github.io"</span> <span class="token comment"># 这里的名字取什么都行</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="上传密钥到-库3"><a href="#上传密钥到-库3" class="headerlink" title="上传密钥到 库3"></a>上传密钥到 库3</h4><ul><li>打开 <code>库3</code> -&gt; Settings -&gt; Security -&gt; Deploy keys -&gt; 将刚才生成的公钥填到这里面</li></ul><h3 id="配置-PAT-Personal-Access-Token"><a href="#配置-PAT-Personal-Access-Token" class="headerlink" title="配置 PAT(Personal Access Token)"></a>配置 PAT(Personal Access Token)</h3><blockquote><p>用于 Workflow 自动部署是可以对库进行读写</p></blockquote><ol><li>点击 Github 右上角头像 -&gt; Settings -&gt; Developer settings -&gt; Personal access tokens -&gt; Tokens(classic) -&gt; Generate new token (classic)</li><li>Note 可以随意填写，最好自己看见能懂就行</li><li>Expiration 过期时间，可以选择不过期</li><li>Select scopes 中勾选 <code>workflow</code> 和 <code>write:packages</code></li><li>Generate token</li><li>然后把生成的 token(ghp_xxxxx) 保存下来备用</li></ol><h3 id="创建-Workflow"><a href="#创建-Workflow" class="headerlink" title="创建 Workflow"></a>创建 Workflow</h3><blockquote><p>让 库1 &amp; 库2 生成的代码能自动发布到 库3</p></blockquote><ul><li><p>打开 <code>库1</code> -&gt; Action -&gt; New workflow -&gt; Simple workflow -&gt; Configure<br>(或者直接在 <code>库1</code> 的根目录创建 <code>.github/workflows/xxx.yml</code>)</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo Build &amp; Deploy <span class="token punctuation">-</span> Private to Public<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> main <span class="token punctuation">]</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>    <span class="token comment"># 检出 库1 &amp; 库2</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3.0.0    <span class="token key atrule">with</span><span class="token punctuation">:</span>      <span class="token key atrule">token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.CHK_PAT <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment"># Personal Access Token，稍后我们会在 库1 中进行配置</span>      <span class="token key atrule">submodules</span><span class="token punctuation">:</span> <span class="token string">'true'</span> <span class="token comment"># 检出 submodule</span>      <span class="token key atrule">persist-credentials</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token comment"># 设置 node 环境</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Prepare Node env    <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3    <span class="token key atrule">with</span><span class="token punctuation">:</span>      <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token number">16</span>    <span class="token comment"># 设置 hexo 环境并编译</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo    <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">      npm i -g hexo-cli      npm i      hexo clean &amp;&amp; hexo g</span>    <span class="token comment"># 将生成的文件发布到 库3</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy    <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@v4.3.3    <span class="token key atrule">with</span><span class="token punctuation">:</span>      <span class="token key atrule">ssh-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DEPLOY_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment"># 部署密钥的私钥，稍后我们会在 库1 中进行配置</span>      <span class="token key atrule">repository-name</span><span class="token punctuation">:</span> clistery/clistery.github.io <span class="token comment"># 库3的名字，格式为 user/repository</span>      <span class="token key atrule">branch</span><span class="token punctuation">:</span> main <span class="token comment"># 发布到库3的 main 分支</span>      <span class="token key atrule">folder</span><span class="token punctuation">:</span> public <span class="token comment"># 库3的类型，公共库</span>      <span class="token key atrule">single-commit</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">commit-message</span><span class="token punctuation">:</span> <span class="token string">"Deploy by source"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="配置-Workflows-变量"><a href="#配置-Workflows-变量" class="headerlink" title="配置 Workflows 变量"></a>配置 Workflows 变量</h3><ul><li><p>打开 <code>库1</code> -&gt; Settings -&gt; Security -&gt; Secrets -&gt; Actions</p></li><li><p>配置 CHK_PAT</p><ol><li>点击 New repository secret</li><li>Name 输入 <code>CHK_PAT</code></li><li>Secret 输入 <a href="#%E9%85%8D%E7%BD%AE-PAT-Personal-Access-Token">配置 PAT(Personal Access Token)</a> 时生成的 token</li><li>Add secret</li></ol></li><li><p>配置 DEPLOY_KEY</p><ol><li>点击 New repository secret</li><li>Name 输入 <code>DEPLOY_KEY</code></li><li>Secret 输入 <a href="#%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5">生成密钥</a> 时生成的私钥</li><li>Add secret</li></ol></li></ul><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>现在一切配置妥当之后，你就可以向 <code>库1</code> 和 <code>库2</code> 中推送代码，workflow 就会自动将代码部署到 <code>库3</code> 中，不出意外的话就可以在 xxx.github.io 中看到更新了</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Github Pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google AOSP 源码获取</title>
      <link href="/2022/10/19/android/aosp-get/"/>
      <url>/2022/10/19/android/aosp-get/</url>
      
        <content type="html"><![CDATA[<h1 id="AOSP"><a href="#AOSP" class="headerlink" title="AOSP"></a>AOSP</h1><blockquote><p>AOSP，全称”Android Open Source Project”，中文意为”Android 开放源代码项目”。发起者是谷歌，主要用途是移动设备的系统。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装-REPO"><a href="#安装-REPO" class="headerlink" title="安装 REPO"></a>安装 REPO</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/bin<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=~</span>/bin:<span class="token environment constant">$PATH</span><span class="token function">curl</span> https://storage.googleapis.com/git-repo-downloads/repo <span class="token operator">&gt;</span> ~/bin/repo<span class="token comment">## 如果上述 URL 不可访问，可以用下面的：</span><span class="token comment">## curl -sSL  'https://gerrit-googlesource.proxy.ustclug.org/git-repo/+/master/repo?format=TEXT' |base64 -d &gt; ~/bin/repo</span><span class="token function">chmod</span> a+x ~/bin/repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="下载每月更新的初始化包"><a href="#下载每月更新的初始化包" class="headerlink" title="下载每月更新的初始化包"></a>下载每月更新的初始化包</h2><p>由于大陆受到 GFW 的限制，所以直接访问 Google 代码仓库会受到限制，所以这里我们通过 Mirror 镜像加速</p><blockquote><p>这里我们使用 科大源 的镜像仓库<br><code>第一次同步数据量特别大，如果网络不稳定，中间失败就要从头再来了。所以我们提供了打包的 AOSP 镜像，为一个 tar 包，大约 200G（单文件 200G，注意你的磁盘格式要支持）。这样你 就可以通过 HTTP(S) 的方式下载，该方法支持断点续传。</code></p></blockquote><ul><li><a href="https://mirrors.ustc.edu.cn/aosp-monthly/">下载地址</a></li></ul><p><em>注意！下载完成后请检查 checksum 是否匹配，避免重复操作</em></p><ul><li>下载完成后解压到有 200G 可用空间的分区即可</li></ul><h2 id="同步代码"><a href="#同步代码" class="headerlink" title="同步代码"></a>同步代码</h2><h3 id="设置分支"><a href="#设置分支" class="headerlink" title="设置分支"></a>设置分支</h3><ul><li><p>默认同步 master 分支</p></li><li><p>可以通过指定版本的方式切换分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">repo init <span class="token parameter variable">-b</span> android-13.0.0_r11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p><a href="https://source.android.com/source/build-numbers.html#source-code-tags-and-builds">Android 版本列表</a> </p></li><li><p>也可以通过查看分支的方式本地查看版本号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> .repo/manifests<span class="token function">git</span> branch <span class="token parameter variable">-avv</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>首次切换完成后可能会报错，可以无视，我们只需要检查 manifest 文件查看是否切换成功<br><code>cat .repo/manifests.git/config</code></p><pre class="line-numbers language-config" data-language="config"><code class="language-config">[branch "default"]    remote = origin    merge = refs/heads/android-13.0.0_r11 # 这里原本是 master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="同步拉取"><a href="#同步拉取" class="headerlink" title="同步拉取"></a>同步拉取</h3><ul><li>通过 <code>repo sync</code> 命令进行同步就可以完成最后的代码拉取</li></ul><h2 id="REPO-命令"><a href="#REPO-命令" class="headerlink" title="REPO 命令"></a>REPO 命令</h2><h3 id="开启本地分支"><a href="#开启本地分支" class="headerlink" title="开启本地分支"></a>开启本地分支</h3><p><code>repo start my_branch --all</code></p><h3 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h3><p><code>repo branches</code></p><h3 id="丢弃本地改动"><a href="#丢弃本地改动" class="headerlink" title="丢弃本地改动"></a>丢弃本地改动</h3><p><code>repo forall -c git reset --hard</code></p><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><p><code>repo checkout my_branch1</code></p><h3 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h3><p><code>repo status</code></p><h3 id="同步指定的项目"><a href="#同步指定的项目" class="headerlink" title="同步指定的项目"></a>同步指定的项目</h3><p><code>repo sync platform/prebuilts/rust</code></p><ul><li>可以通过查看 <code>.repo/manifests/default.xml</code> 文件获取到项目名</li></ul><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li>查看 repo 运行过程中执行的 git 命令<br><code>export REPO_TRACE=1</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> aosp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> android </tag>
            
            <tag> aosp </tag>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何清除 Android Button 中自带的 padding</title>
      <link href="/2022/10/19/android/button-without-padding/"/>
      <url>/2022/10/19/android/button-without-padding/</url>
      
        <content type="html"><![CDATA[<blockquote><p>去除 Android 自带的 padding 效果有两种方式</p></blockquote><ol><li><p>布局文件中去除</p>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingEnd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>minHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>minWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>代码去除</p>  <pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">btn<span class="token punctuation">.</span>minimumHeight <span class="token operator">=</span> <span class="token number">0</span>btn<span class="token punctuation">.</span>minimumWidth <span class="token operator">=</span> <span class="token number">0</span>btn<span class="token punctuation">.</span>minWidth <span class="token operator">=</span> <span class="token number">0</span>btn<span class="token punctuation">.</span>minHeight <span class="token operator">=</span> <span class="token number">0</span>btn<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>it<span class="token punctuation">.</span>layoutParams <span class="token operator">=</span> it<span class="token punctuation">.</span>layoutParams<span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>    width <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>    height <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> widgets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scp 命令</title>
      <link href="/2022/10/18/ubuntu/scp/"/>
      <url>/2022/10/18/ubuntu/scp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux scp 命令用于 Linux 之间复制文件和目录。<br>scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。<br>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。</p></blockquote><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul><li>-B 使用批处理模式（传输过程中不询问传输口令或短语）</li><li>-C 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</li><li>-p 保留原文件的修改时间，访问时间和访问权限。</li><li>-q 不显示传输进度条。</li><li>-r 递归复制整个目录。</li><li>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</li><li>-l limit 限定用户所能使用的带宽，以Kbit/s为单位。</li><li>-P port：注意是大写的P, port是指定数据传输用到的端口号</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li><p>从本地复制到远程</p><ul><li><p>复制单个文件</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> xx.txt root@remote:/<span class="token function">scp</span> xx.txt remote:/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>复制目录</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> <span class="token parameter variable">-r</span> <span class="token function">dir</span> remote:/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>从远程复制到本地<br>  将参数顺序颠倒即可</p></li><li><p>指定端口</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> <span class="token parameter variable">-P</span> <span class="token number">3301</span> xx.txt remote:/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> ubuntu </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsync 命令</title>
      <link href="/2022/10/18/ubuntu/rsync/"/>
      <url>/2022/10/18/ubuntu/rsync/</url>
      
        <content type="html"><![CDATA[<blockquote><p>rsync 全称 Remote Sync.<br>rsync是linux系统下的数据镜像备份工具。使用快速增量备份工具Remote Sync可以远程同步，支持本地复制，或者与其他SSH、rsync主机同步。</p></blockquote><ol><li><p>常用参数</p><ul><li>-P 断点续传，等同于 <code>--partial</code> &amp; <code>--progress</code></li><li>–rsh 指定使用rsh、ssh方式进行数据同步</li><li>-v, –verbose 详细模式输出，传输时的进度等信息</li><li>-z 传输时压缩</li><li>-a, –archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD</li><li>-q, –quiet 精简输出</li><li>-c, –checksum 打开校验开关，强制对文件传输进行校验</li><li>-r, –recursive 对子目录以递归模式处理</li><li>-R, –relative 使用相对路径信息</li><li>-b, –backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用–suffix选项来指定不同的备份文件前缀。</li><li>–backup-dir 将备份文件(如~filename)存放在在目录下。</li><li>-suffix=SUFFIX 定义备份文件前缀</li><li>-u, –update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)</li><li>-l, –links 保留软链结</li><li>-L, –copy-links 像对待常规文件一样处理软链接</li><li>-H, –hard-links 保留硬链接</li><li>-p, –perms 保持文件权限</li><li>-o, –owner 保持文件属主信息</li><li>-g, –group 保持文件属组信息</li><li>-D, –devices 保持设备文件信息</li><li>-t, –times 保持文件时间信息</li><li>-S, –sparse 对稀疏文件进行特殊处理以节省DST的空间</li><li>-n, –dry-run显示哪些文件将被传输</li><li>-W, –whole-file 拷贝文件，不进行增量检测</li><li>-x, –one-file-system 不要跨越文件系统边界</li><li>-C, –cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件</li><li>–partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输</li><li>–progress 显示备份过程</li><li>–bwlimit=KBPS 限制I/O带宽，KBytes per second</li></ul></li><li><p>示例</p><ul><li>从 remote 断点续传 xxx.tar 到当前目录<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rsync</span> <span class="token parameter variable">-P</span> <span class="token parameter variable">--rsh</span><span class="token operator">=</span>ssh remote:xxx.tar <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> ubuntu </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jobs 命令</title>
      <link href="/2022/10/18/ubuntu/jobs/"/>
      <url>/2022/10/18/ubuntu/jobs/</url>
      
        <content type="html"><![CDATA[<blockquote><p>jobs是Linux命令。jobs命令显示了当前shell环境中已启动的作业状态。如果JobID参数没有指定特定作业，就显示所有的活动的作业的状态信息。如果报告了一个作业的终止，shell从当前的shell环境已知的列表中删除作业的进程标识。</p></blockquote><ul><li>job 命令通常与 wait、fg、bg、kill 命令一起使用</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li><p>命令挂起</p><ul><li>使用 wget 下载一个文件 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">wget</span> <span class="token variable">${remote_file}</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>然后在下载过程中按下 <code>ctrl+z</code> 将任务挂起 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">downloading<span class="token punctuation">..</span>.^Z <span class="token comment"># 这时按下了 `ctrl+z`</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  + <span class="token number">140578</span> suspended  <span class="token function">wget</span> <span class="token variable">${remote_file}</span> <span class="token builtin class-name">.</span> <span class="token comment"># 下载任务被挂起，任务 id 为 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>通过 jobs -l 查看被挂起的任务 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">jobs</span> <span class="token parameter variable">-l</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  + <span class="token number">140578</span> suspended  <span class="token function">wget</span> <span class="token variable">${remote_file}</span> <span class="token builtin class-name">.</span> <span class="token comment"># 有一个 id 为 1 的任务 pid 为 140578</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>将任务通过 fg 恢复到前台继续执行</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">fg</span> %1 <span class="token comment"># % 是必须的，%1 标识任务 id 为 1 的任务</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  + <span class="token number">140578</span> continued  <span class="token function">wget</span> <span class="token variable">${remote_file}</span> <span class="token builtin class-name">.</span>downloading<span class="token punctuation">..</span>. <span class="token comment"># 下载任务已经恢复到前台并继续下载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 这时我们仍然可以再次使用 <code>ctrl+z</code> 将任务挂起</p></li><li><p>其他 bg、wait、kill 与 fg 的使用方式类似，都是通过 <code>%{任务id}</code> 的方式进行对任务的操作，这里就不再过多讨论</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> ubuntu </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>at 命令</title>
      <link href="/2022/10/18/ubuntu/at/"/>
      <url>/2022/10/18/ubuntu/at/</url>
      
        <content type="html"><![CDATA[<blockquote><p>at 命令可以将某些命令或任务放到指定的时间自动执行</p></blockquote><h5 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h5><blockquote><p><code>at 命令与 jobs 命令有所不同，当登录用户退出后 jobs 命令的任务会被取消，而 at 命令则不会</code></p></blockquote><h3 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-V</span> 输出版本号<span class="token parameter variable">-f</span> 指定脚本文件<span class="token parameter variable">-l</span> 查看查看任务队列，等同于atq<span class="token parameter variable">-d</span> 删除指定任务，等同于atrm<span class="token parameter variable">-r</span> 删除指定任务，等同于atrm<span class="token parameter variable">-c</span> 打印任务的内容到标准输出atrm 删除指定任务atq 查看任务队列<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>创建指定时间执行命令的任务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~ at <span class="token number">17</span>:13 <span class="token comment"># 设定当时间到达 17:13 时</span>at<span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">"hello"</span> <span class="token operator">&gt;&gt;</span> a <span class="token comment"># 将 `hello` 输出到 a 文件中</span>at<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>EOT<span class="token operator">&gt;</span> <span class="token comment"># 按下 `ctrl+d` 创建任务</span>job <span class="token number">9</span> at Tue Oct <span class="token number">18</span> <span class="token number">17</span>:13:00 <span class="token number">2022</span> <span class="token comment"># 返回任务 id 为 9 并将在指定的时间执行该任务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>创建指定时间执行脚本的任务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">at <span class="token parameter variable">-f</span> upload.sh <span class="token number">17</span>:13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者也可以使用立即执行的方式来实现等同于 <code>&amp;</code> 的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">at <span class="token parameter variable">-f</span> upload.sh now<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> ubuntu </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 示例</title>
      <link href="/2022/10/18/markdown-sample/"/>
      <url>/2022/10/18/markdown-sample/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-使用示例"><a href="#Markdown-使用示例" class="headerlink" title="Markdown 使用示例"></a>Markdown 使用示例</h1><hr><h3 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h3><p>使用 * 和 ** 表示斜体和粗体。</p><p>示例：</p><p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p><h3 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">这是一个一级标题============================这是一个二级标题--------------------------------------------------### 这是一个三级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：</p><pre class="line-numbers language-none"><code class="language-none"># H1## H2### H3#### H4##### H5###### H6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p><p>示例：</p><p>这是去往 <a href="https://clistery.github.io/">本人博客</a> 的链接。</p><h3 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p><p>示例：</p><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h3 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p><p>示例：</p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h3 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p><p>示例：</p><blockquote><p>野火烧不尽，春风吹又生。</p></blockquote><h3 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p><p>示例：</p><p>让我们聊聊 <code>html</code>。</p><h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.  代码块"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p><p>示例：</p><pre><code>这是一个代码块，此行左侧有四个不可见的空格。</code></pre><h3 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9.  插入图像"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p><p>示例：</p><p><img src="https://cn.gravatar.com/userimage/185917535/6a87cb72111639876f34134e3589af12.jpg?size=100" alt="我的头像"></p><h3 id="10-删除线"><a href="#10-删除线" class="headerlink" title="10. 删除线"></a>10. 删除线</h3><p>使用 ~~ 表示删除线。</p><p><del>这是一段错误的文本。</del></p><h3 id="11-加强的代码块"><a href="#11-加强的代码块" class="headerlink" title="11. 加强的代码块"></a>11. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p><p>非代码示例：</p><pre class="line-numbers language-none"><code class="language-none">$ sudo apt-get install vim-gnome<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Python 示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@requires_authorization</span><span class="token keyword">def</span> <span class="token function">somefunc</span><span class="token punctuation">(</span>param1<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> param2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''A docstring'''</span>    <span class="token keyword">if</span> param1 <span class="token operator">&gt;</span> param2<span class="token punctuation">:</span> <span class="token comment"># interesting</span>        <span class="token keyword">print</span> <span class="token string">'Greater'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>param2 <span class="token operator">-</span> param1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token boolean">None</span><span class="token keyword">class</span> <span class="token class-name">SomeClass</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> message <span class="token operator">=</span> <span class="token triple-quoted-string string">'''interpreter... prompt'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JavaScript 示例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*** nth element in the fibonacci series.* @param n &gt;= 0* @return the nth element, &gt;= 0.*/</span><span class="token keyword">function</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> tmp<span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>n <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    tmp <span class="token operator">=</span> a<span class="token punctuation">;</span>    a <span class="token operator">+=</span> b<span class="token punctuation">;</span>    b <span class="token operator">=</span> tmp<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-表格支持"><a href="#12-表格支持" class="headerlink" title="12. 表格支持"></a>12. 表格支持</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="13-Html-标签"><a href="#13-Html-标签" class="headerlink" title="13. Html 标签"></a>13. Html 标签</h3><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>值班人员<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>李强<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>张明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>王平<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table>    <tbody><tr>        <th rowspan="2">值班人员</th>        <th>星期一</th>        <th>星期二</th>        <th>星期三</th>    </tr>    <tr>        <td>李强</td>        <td>张明</td>        <td>王平</td>    </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Ubuntu 中用命令行查看流量占用</title>
      <link href="/2022/10/18/ubuntu/nethogs/"/>
      <url>/2022/10/18/ubuntu/nethogs/</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用 nethogs 工具，我们可以 top 命令一样查看网卡\进程的流量占用情况</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nethogs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nethogs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果没有报错的话你就会看到下面的界面<br><img src="/medias/images/nethogs.png" alt="nethogs运行效果"></p></blockquote><h3 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-V</span> <span class="token builtin class-name">:</span> 显示版本<span class="token parameter variable">-h</span> <span class="token builtin class-name">:</span> 显示帮助信息<span class="token parameter variable">-b</span> <span class="token builtin class-name">:</span> 比 <span class="token parameter variable">-t</span> 更为详细的跟踪模式<span class="token parameter variable">-d</span> <span class="token builtin class-name">:</span> 数据刷新时间 如 nethogs <span class="token parameter variable">-d</span> <span class="token number">1</span> 就是每秒刷新一次<span class="token parameter variable">-v</span> <span class="token builtin class-name">:</span> 查看模式<span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">=</span> KB/s, <span class="token number">1</span> <span class="token operator">=</span> 显示总流量单位KB, <span class="token number">2</span> <span class="token operator">=</span> 显示总流量单位B, <span class="token number">3</span> <span class="token operator">=</span> 显示总流量单位MB<span class="token punctuation">)</span>. 默认为 <span class="token number">0</span>.<span class="token parameter variable">-c</span> <span class="token builtin class-name">:</span> 刷新次数<span class="token parameter variable">-t</span> <span class="token builtin class-name">:</span> 跟踪模式在 nethogs 运行过程中按下<span class="token punctuation">(</span>类似 <span class="token function">top</span> 快捷键<span class="token punctuation">)</span>:q: 退出s: 按发送流量排序r: 按接收流量排序m: 切换查看模式 <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
